How to test the add_preference() function within the User class:

    Step 1: Import a .csv file into the Database object, which will contain the necessary list of medias to to populate our dataframe 
    Step 2: Get a movie name from the user
    Step 3: Pass in the movie name and the Database object as arguments into the add_prefenrence() method
    Step 4: add_prefrence() will check if the provided movie is in the list of prefernces (find a match)
    - If the movie is not present:
        Step 5: Check if the movie name exists within the Database
        - If there is a match:
            Step 6: add_preference() will create a Movie object based on that movie's attributes.
            Step 7: add_preference() will append that Movie object to the preference attribute of the User representation.
        - If there is no match:
            Step 6: the method raises a ValueError

    To determine if the test was successful, the tester can check if either a Movie object was appended to User.preferences or a ValueError was raised.

How to test the get_recommendation functions:

    Step 1: Pass in the Netflix dataframe as an argument for the method
    Step 2: The method will create a new dataframe containing only medias that has genre(s) that is within the common_genres list 
    Step 3: The new dataframe will create a new column called num_matches that has the number of times a matched genre is found for each media
    Step 4: The method will sorted the resulting dataframe by the number of genre matches and return that shorted dataframe

    To determine if the test was succesful, check to see if only media with at least one common genre showed up in the dataframe, along with a num_matches column, and the count for num_matches are correct.